#---- Typical OpenGL Test -------------
prerun: mydef_page -mglsl -oout cube.def

include: gl/osx.def
include: gl/gl_geometry.def

macros:
    uniform_list: n_width, n_height, f_time
    attrib_list: pos, color
    varying_list: v3_fragcolor

page: cube, gl_frame
    module: c
    shader: out/cube
    shader_string: 1
    window_size: 800, 600
    fps: 30

    $(if:0)
        $call demo_cube
    $(else)
        $(set:draw_type=draw_6)
        &call static_vertex_array
            $(set:pos) join, ','
                $(P000), $(P010), $(P100),$(P110)
                $(P001), $(P011), $(P101),$(P111)
                $(P000), $(P001), $(P100),$(P101)
                $(P010), $(P011), $(P110),$(P111)
                $(P000), $(P001), $(P010),$(P011)
                $(P100), $(P101), $(P110),$(P111)
            $(set:color) join, ','
                $(red:x4,)
                $(green:x4,)
                $(blue:x4,)
                $(cyan:x4,)
                $(yellow:x4,)
                $(purple:x4,)
            $(mexport:pos,color)

    subcode: draw_6
        $for i=0:6
            glDrawArrays(GL_TRIANGLE_STRIP,i*4,4)

#----------------------------------------------- 
include: gl/glsl_util.def
page: cube, vertex_shader
    module: glsl
    type: vsl

    f_aspect = 1.0 * n_width / n_height
    v3_p = pos
    $call setup_model, v3_p
    gl_Position.xyz = v3_p
    gl_Position.w = 1.0

    v3_fragcolor = color

    subcode: setup_model(p)
        # f_theta = $(degree:60.0)
        f_theta = f_time/50.0
        f_phi   = f_time/2.0
        $call rotate, $(p).yz, f_theta
        $call rotate, $(p).xz, f_phi
        $(p).x/=f_aspect
        $(p)/=4.0

page: cube, fragment_shader
    module: glsl
    type: fsl

    color = v3_fragcolor

