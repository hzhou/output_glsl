#---- Typical OpenGL Test -------------
prerun: mydef_page -mglsl -oout cube_tex.def

include: gl/osx.def
include: gl/gl_geometry.def

macros:
    uniform_list: n_width, n_height, f_time, tex_cube
    attrib_list: pos, uv
    varying_list: v2_uv

    type_uv: vec2

page: cube, gl_frame
    module: c
    shader: out/cube
    shader_string: 1
    window_size: 800, 600
    fps: 30

    $(block:_setup)
        $global GLuint tex_cube
        tex_cube = load_dds("cube.dds")
        $global GLfloat uv_data[24*2]
        l=0
        $for i=0:3
            $for j=0:2
                $(for: i, i, i+1, i+1 and j, j+1, j+1, j)
                    uv_data[l++] = ($1)/3.0
                    uv_data[l++] = 1.0-($2)/2.0
        $(if:0)
            $for i=0:48:2
                $print "%f %f", uv_data[i], uv_data[i+1]
                $if i%8==6
                    $print

    $call demo_cube
    $call draw_bg

#----------------------------------------------- 
include: gl/glsl_util.def
page: cube, vertex_shader
    module: glsl
    type: vsl

    f_aspect = 1.0 * n_width / n_height
    v3_p = pos
    $call setup_model, v3_p
    gl_Position.xyz = v3_p
    gl_Position.w = 1.0

    v2_uv = uv

    subcode: setup_model(p)
        # f_theta = $(degree:60.0)
        f_theta = f_time/50.0
        f_phi   = f_time/2.0
        $call rotate, $(p).yz, f_theta
        $call rotate, $(p).xz, f_phi
        $(p).x/=f_aspect
        $(p)/=4.0

page: cube, fragment_shader
    module: glsl
    type: fsl

    color = texture(tex_cube, v2_uv).rgb

#----------------------------------------------- 
subcode: draw_bg
    $call load_program, bg, out/bg
    $call use_prog, bg
    $(set:z=0.99)
    $global GLfloat bg_data[]={$(P0),$(z),$(P1),$(z),$(P3),$(z),$(P2),$(z)}
    $call set_buffer, bg, static
    &call draw
        $(set:attrib_list=bg)
        $call bind_attrib_list
        glDrawArrays(GL_TRIANGLE_STRIP, 0, 4)
        $call disable_attrib_list

